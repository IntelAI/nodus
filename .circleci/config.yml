version: 2
jobs:
  build:
    docker:
      - image: golang:1.10
    working_directory: /go/src/github.com/IntelAI/nodus
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: install dependencies
          command: |
             VER="18.06.0-ce"
             curl -L -o /tmp/docker-$VER.tgz https://download.docker.com/linux/static/stable/x86_64/docker-$VER.tgz
             tar -xz -C /tmp -f /tmp/docker-$VER.tgz
             mv /tmp/docker/* /usr/bin
             curl -L https://github.com/docker/compose/releases/download/1.18.0/docker-compose-`uname -s`-`uname -m` > /usr/local/bin/docker-compose
             chmod +x /usr/local/bin/docker-compose
      - run: 
          name: build container and unit test
          command: |
             docker build -t nodus:latest -f Dockerfile .
      - run:
          name: bring up control plane
          command: |
             DOCKER_COMPOSE_SERVICES="etcd k8s-api k8s-controller-manager k8s-scheduler nodus" make k8s-up
      - run:
          name: run pods scenario
          command: |
             docker-compose exec nodus bash -c "sleep 5 && nptest --scenario=examples/simple/scenario.yml --pods=examples/simple/pods.yml --nodes=examples/simple/nodes.yml --master=k8s-api:8080"
      - run:
          name: run crd scenario
          command: |
             docker-compose exec nodus bash -c "nptest --scenario=examples/simple/scenario_crd.yml --master=k8s-api:8080"
      - run:
          name: run deployment scenario
          command: |
             docker-compose exec nodus bash -c "nptest --scenario=examples/simple/scenario_deployment.yml --nodes=examples/simple/nodes.yml --master=k8s-api:8080"
      - run:
          name: run job scenario
          command: |
             docker-compose exec nodus bash -c "nptest --scenario=examples/simple/scenario_job.yml --nodes=examples/simple/nodes.yml --master=k8s-api:8080"
      - run:
          name: run api assert scenario
          command: |
             docker-compose exec nodus bash -c "nptest --scenario=examples/simple/scenario_assert.yml --master=k8s-api:8080"
